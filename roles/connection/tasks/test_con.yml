---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Test connection
#
########################################################################

- name: Run tasks to test the connection
  ansible.builtin.include_tasks:
    file: "{{ lookup( 'o0_o.host.first_found_by_host_attributes',
                      'tasks',
                      prefix='test_con_' ) }}"

# Do not accept connections to localhost on default port 22 (prevents
# accidentally targeting localhost when configuring virtual hosts on
# local NAT). To target localhost, use the local connection type or
# SSH with an ansible_host value other than 127.0.0.1.
- name: The connection was valid and successful
  ansible.builtin.assert:
    that:
      - >-
          ansible_host != '127.0.0.1'
          or (  ansible_host == '127.0.0.1'
                and ansible_port | default('22') | string != '22' )
      # rescue will not catch a failure from an unreachable host, so
      # we ignore unreachable during the test, and fail here instead so
      # that the rescue portion of the block will be triggered.
      - test_con_reg is reachable
      - test_con_reg is not failed

- name: Scope functional connection variables for general use
  ansible.builtin.set_fact:
    ansible_host: "{{ ansible_host }}"
    ansible_connection: "{{ ansible_connection }}"
    ansible_port: "{{ ansible_port | default(omit) }}"
    ansible_ssh_private_key_file: >-
      {{ ansible_ssh_private_key_file | default(omit) }}
    ansible_user: "{{ ansible_user | default(omit) }}"
    ansible_network_os: "{{ ansible_network_os | default(omit) }}"
    ansible_network_cli_ssh_type: >-
      {{ ansible_network_cli_ssh_type | default(omit) }}

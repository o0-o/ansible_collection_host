---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure repositories on an SSH host
#
# These tasks will configure repositories in separate configuration
# files as in the case of DNF.
#
########################################################################

- name: >-
    List configuration files currently in repositories configuration directory
  ansible.builtin.command:
    argv:
      - ls
      - -1
      - "{{ repos_cfg_dir_var | quote }}"
  become: true
  register: repo_cfg_files_reg
  changed_when: false

# This is necessary when repository configuration files are idenfitied
# by file extension.
- name: There are extraneous repository configuration files
  when:
    - extra_files_var != []
    - ext_var != ''
  block:

    # Ansible has no module for moving a file, so we write an empty
    # string to the extraneous repository config file to take advantage
    # of the builtin backup behavior.
    - name: Backup extraneous repository configuration files
      ansible.builtin.copy:
        content: ''
        dest: "{{ extra_file_path_var }}"
        mode: 0644
        owner: root
        group: "{{ root_grp }}"
        backup: true
      become: true
      loop: "{{ extra_files_var }}"
      loop_control:
        loop_var: extra_file_item

    # Delete the empty file left by the previous task.
    - name: Delete extraneous repository configuration files
      ansible.builtin.file:
        path: "{{ extra_file_path_var }}"
        state: absent
      become: true
      loop: "{{ extra_files_var }}"
      loop_control:
        loop_var: extra_file_item

- name: Run tasks to template the each repository config file
  ansible.builtin.include_tasks: cfg_sw_ssh_pkg-mgr_template.yml
  # Use indexed loop for optimal, parallel execution
  loop: "{{ range( 0, repo_list | length ) | list }}"
  loop_control:
    loop_var: repo_index

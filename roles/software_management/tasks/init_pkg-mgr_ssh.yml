---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Initialize the package manager
#
########################################################################

- name: Format environmental variables for raw module commands
  ansible.builtin.set_fact:
    pkg_mgr_env: >-
      {{ pkg_mgr_env | default }}
      {{ env_var['key'] }}={{ env_var['value'] | string | quote }}
  when:
    - pkg_mgr_var['env'] is defined
    - use_raw
  loop: "{{ pkg_mgr_var['env'] | dict2items }}"
  loop_control:
    loop_var: env_var

- name: Run tasks to initialize the package manager including GPG keys,
    cleaning and updating the cache
  ansible.builtin.include_tasks:
    file: "run_pkg-mgr_command_ssh{{ tasks_file_suffix }}.yml"
  vars:
    cmd_var: >-
      {{  ( [ pkg_mgr_var[cmd_name_item]['cmd']
              | default( pkg_mgr_var['cmd'] ),
              pkg_mgr_var[cmd_name_item]['arg']
              | default('') ]
            + pkg_mgr_var[cmd_name_item]['opts']
              | default([]) )
          | reject('==', '') }}
    success_codes_var: "{{  pkg_mgr_var[cmd_name_item]['success_codes']
                            | default( [0] ) }}"
#  when: pkg_mgr_var[cmd_name_item] is defined #breaks the loop order
  loop:
    - init
    - key
    - clean
    - update
  loop_control:
    loop_var: cmd_name_item

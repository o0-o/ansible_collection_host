---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure basic software management on an SSH host
#
########################################################################

- name: Run software management configuration dependencies
  ansible.builtin.include_tasks: cfg_sw_ssh_dep.yml
  loop: "{{ cfg_sw_ssh_deps }}"
  loop_control:
    loop_var: sw_mgmt_dep_item

- name: Use OS default package manager repository configurations if none are
    defined
  ansible.builtin.set_fact:
    repos: "{{ os_pkg_mgr_repos[os_name] }}"
  changed_when: true
  when: repos is undefined
  notify: update host inventory variables

# Currently this only applies to macOS where Xcode must be installed.
- name: Run tasks to configure software based on the system if necessary
  ansible.builtin.include_tasks: "{{ tasks_file_var }}"
  vars:
    sys_var: "{{ ansible_system | default(sys) | lower }}"
    tasks_file_var: "tasks/cfg_sw_ssh_{{ sys_var }}{{ tasks_file_suffix }}.yml"
  when: lookup('ansible.builtin.fileglob', tasks_file_var) != []

# Configure package manager and repositories
- name: Run tasks to configure each package manager
  ansible.builtin.include_tasks: cfg_sw_ssh_pkg-mgr.yml
  vars:
    # General
    pkg_mgr_cfgs_var: "{{ os_pkg_mgr_cfgs[os_name] }}"
    pkg_mgr_names_var: "{{ pkg_mgr_cfgs_var.keys() | list }}"
    # Specific to the loop item
    pkg_mgr_name_var: "{{ pkg_mgr_names_var[pkg_mgr_name_index] }}"
    pkg_mgr_var: "{{ pkg_mgmt[pkg_mgr_name_var] }}"
    # Text formatting
    pkg_mgr_name_pretty_var: >-
      {{  ( pkg_mgr_name_var in ['yum', 'dnf'] )
          | ternary(  pkg_mgr_name_var | upper,
                      pkg_mgr_name_var | title ) }}
    header_var: "\
      {{  ( title_var + '\n \n' + default_comment_header )
          | wordwrap(70)
          | comment(  prefix=default_comment_prefix,
                      postfix=default_comment_postfix ) }}"
  # Use indexed loop for optimal, parallel execution
  loop: "{{ range( 0, pkg_mgr_names_var | length ) | list }}"
  loop_control:
    loop_var: pkg_mgr_name_index

- name: Initialize package managers if their configurations were changed
  ansible.builtin.include_tasks: init_pkg-mgr_ssh.yml
  when: cfg_pkg_mgr_names | default([]) != []
  vars:
    pkg_mgr_name_var: "{{ cfg_pkg_mgr_names[cfg_pkg_mgr_name_index] }}"
    pkg_mgr_var: "{{ pkg_mgmt[pkg_mgr_name_var] }}"
  # Use indexed loop for optimal, parallel execution
  loop: "{{ range( 0, cfg_pkg_mgr_names | length ) | list }}"
  loop_control:
    loop_var: cfg_pkg_mgr_name_index

- name: Reset the list of configured package managers
  ansible.builtin.set_fact:
    cfg_pkg_mgr_names: []

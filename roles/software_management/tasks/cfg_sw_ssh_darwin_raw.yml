---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Install Xcode command line tools on macOS
#
########################################################################

- name: Install Xcode command line tools if they aren't already
  vars:
    cli_tools_tmp_file_var: >-
      /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
    cli_tools_pkg_var: >-
      {{  sw_updates_reg['stdout_lines']
          | select('match', 'Label: Command Line Tools')
          | last
          | regex_replace('^.*Label: ') }}
  block:

    - name: Check if Xcode command line tools are installed (macOS)
      ansible.builtin.raw: >-
        [ -e /Library/Developer/CommandLineTools/usr/bin/git ]
      changed_when: false

  rescue:

    # This prevents manual GUI intervention.
    - name: Create a temporary file for softwareupdate (macOS)
      ansible.builtin.raw: "touch {{ cli_tools_tmp_file_var | quote }}"
      when: not ansible_check_mode

    - name: The previous task would have resulted in a change (check mode)
      ansible.builtin.debug:
        msg: "{{ cli_tools_tmp_file_var }} would have been created."
      changed_when: true
      when: ansible_check_mode

    - name: >-
        List software updates to confirm command line tools package is
        available (macOS)
      ansible.builtin.raw: softwareupdate --list
      register: sw_updates_reg
      changed_when: false
      failed_when: >-
        sw_updates_reg['stdout_lines']
        | select('match', 'Label: Command Line Tools')
        == []

    - name: Install Xcode command line tools (macOS)
      ansible.builtin.raw: >-
        {{ ansible_become_method | default }} softwareupdate --install
        {{ cli_tools_pkg_var | quote }}
      when: not ansible_check_mode

    - name: The previous task would have resulted in a change (check mode)
      ansible.builtin.debug:
        msg: "{{ cli_tools_pkg_var }} would have been installed."
      changed_when: true
      when: ansible_check_mode

    - name: Enable Xcode command line tools (macOS)
      ansible.builtin.raw: >-
        {{ ansible_become_method | default }} xcode-select --switch
        /Library/Developer/CommandLineTools
      when: not ansible_check_mode

    - name: The previous task would have resulted in a change (check mode)
      ansible.builtin.debug:
        msg: Xcode command line tools would have been enabled.
      changed_when: true
      when: ansible_check_mode

- name: Confirm that Python is available
  ansible.builtin.ping:

- name: Python is available now, so don't fallback to raw module anymore
  ansible.builtin.set_fact:
    tasks_file_suffix: ''

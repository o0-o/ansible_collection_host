---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Define and configure the mandatory access control system on the host
#
########################################################################

- name: Run role dependencies
  ansible.builtin.include_tasks: cfg_mac_ssh_dep.yml
  loop: "{{ cfg_mac_ssh_deps }}"
  loop_control:
    loop_var: cfg_mac_ssh_dep_item

- name: Define mandatory access control Ansible dependencies
  ansible.builtin.include_vars:
    file: "{{ lookup( 'o0_o.host.first_found_by_host_attributes',
                      'vars',
                      skip=true ) }}"
  #TODO: remove this condition when Arch and Pi are fixed
  when: >-
    mac is undefined
    or mac | default('', true) != ''

- name: Install mandatory access control package dependencies
  ansible.builtin.package:
    name: "{{ ansible_mac_deps }}"
    state: present
  become: true
  when: ansible_mac_deps | default([]) != []

- name: Configure the mandatory access control provider
  ansible.builtin.include_tasks: "cfg_mac_ssh_{{ mac }}.yml"
  when: mac | default('', true) != ''

- name: Define mandatory access control
  ansible.builtin.set_fact:
    mac: "{{ mac | default(none) }}"
  changed_when: >-
    pre_vars['mac'] is undefined
    or pre_vars['mac'] | default('', true) != mac | default('', true)
  notify: update host inventory variables

- name: Mandatory access control has been configured
  ansible.builtin.set_fact:
    use_mac: true

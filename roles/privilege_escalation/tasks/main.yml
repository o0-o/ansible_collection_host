---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure the Ansible become method (privilege escalation)
#
# We don't assume Python is available, but if the role must be run
# before Python is installed, it should be run again to ensure all
# configuration is applied. To grant become privileges to a user that
# is not currently privileged, Python must be available.
#
########################################################################

- name: BEGIN HOST PRIVILEGE ESCALATION ROLE
  ansible.builtin.set_fact:
    role_call_ident: "{{ ident_var }}"
    role_call: "{{ role_call | default([]) + line_var }}"
  vars:
    ident_var: "{{ role_call_ident | default(-1) | int + 1 }}"
    line_var:
      - "{{ ( '  ' * ident_var | int ) | string + ansible_role_name }}"

# Need to do this so that priv_user is not continually evaluated as
# ansible_user as that value may change later.
- name: Define the user that required privilege escalation
  ansible.builtin.set_fact:
    priv_user: "{{ priv_user }}"

- name: Run tasks to configure the privilege escalation method
  ansible.builtin.include_tasks: cfg_priv_ssh.yml
  vars:
    is_root_var: "{{ ansible_user == 'root' }}"
  when: ansible_connection == 'ssh'

- name: END HOST PRIVILEGE ESCALATION ROLE
  ansible.builtin.set_fact:
    role_call_ident: "{{ role_call_ident | int - 1 }}"

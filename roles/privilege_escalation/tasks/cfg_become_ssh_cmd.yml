---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Attempt to configure the current become method for systems using SSH
#
########################################################################

# Some minimal systems only have which while others only have command,
# so we try both.
- name: The Ansible become method is available
  ansible.builtin.raw: >
    which {{ ansible_become_method }} ||
    command -v {{ ansible_become_method }}
  changed_when: false

# Only run configuration tasks if Python is available. If Python is
# installed later by the o0_o.host.python_interpreter role, it will run
# this role again to include these taks.
- name: "Run tasks to Configure {{ ansible_become_method }}"
  ansible.builtin.include_tasks: >-
    cfg_become_ssh_{{ ansible_become_method }}.yml
  vars:
    become_var: "{{ ansible_user != 'root' }}"
  when: >-
    ansible_python_interpreter
    | default(discovered_interpreter_python)
    is defined

# Cannot use ansible_user: user_var because it will create an infinite
# loop when user_var already equals ansible_user.
- name: "Run tasks to test {{ ansible_become_method }} with new user"
  ansible.builtin.include_tasks: test_become_ssh.yml
  vars:
    ansible_user: "{{ new_ansible_user_var }}"
  when: new_ansible_user_var is defined

- name: "Run tasks to test {{ ansible_become_method }} with current user"
  ansible.builtin.include_tasks: test_become_ssh.yml
  when: new_ansible_user_var is undefined

- name: "Scope {{ ansible_become_method }} for general use"
  ansible.builtin.set_fact:
    ansible_become_method: "{{ ansible_become_method }}"

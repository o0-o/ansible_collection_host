---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure the time zone and sync time with localhost
#
########################################################################

- name: BEGIN HOST TIME ROLE
  ansible.builtin.set_fact:
    role_call_ident: "{{ ident_var }}"
    role_call: "{{ role_call | default([]) + line_var }}"
  vars:
    ident_var: "{{ role_call_ident | default(-1) | int + 1 }}"
    line_var:
      - "{{ ( '  ' * ident_var | int ) | string + ansible_role_name }}"

# Do not set this in defaults/
- name: Define the time zone (use localhost's by default)
  ansible.builtin.set_fact:
    tz: "{{ tz
            | default(  lookup('ansible.builtin.pipe', 'date +%Z')
                        | regex_replace('UTC', 'GMT') ) }}"
  changed_when: pre_vars['tz'] | default != tz
  notify: update host inventory variables

- name: Run time definition SSH dependencies
  ansible.builtin.include_tasks: time_dep.yml
  loop: "{{ time_deps }}"
  loop_control:
    loop_var: time_dep_item

- name: Run tasks to configure the time zone
  ansible.builtin.include_tasks:
    file: "{{ lookup( 'o0_o.host.first_found_by_host_attributes',
                      'tasks',
                      prefix='cfg_time_zone_' ) }}"
  when: not use_raw

- name: Run tasks to define the time on the remote host
  ansible.builtin.include_tasks:
    file: "{{ lookup( 'o0_o.host.first_found_by_host_attributes',
                      'tasks',
                      prefix='def_time_' ) }}"

- name: Run tasks to sync time with localhost if necessary
  ansible.builtin.include_tasks:
    file: "{{ lookup( 'o0_o.host.first_found_by_host_attributes',
                      'tasks',
                      prefix='cfg_time_',
                      suffix=tasks_file_suffix ) }}"
  vars:
    local_datetime_var: "{{ now(true, '%Y-%m-%d %H:%M:%S') }}" #GMT
    diff_var: "{{ ( ( local_datetime_var | to_datetime
                      - remote_datetime | to_datetime ).total_seconds() / 60 )
                  | abs }}"
  when: diff_var | int > time_sync_tolerance

- name: Time is synced
  ansible.builtin.set_fact:
    time_sync: true

- name: END HOST TIME ROLE
  ansible.builtin.set_fact:
    role_call_ident: "{{ role_call_ident | int - 1 }}"

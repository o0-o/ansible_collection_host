---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure a user's SSH keys
#
########################################################################

- name: Define the user's SSH directory
  ansible.builtin.set_fact:
    ssh_dir: "{{ cfg_user_reg['home'] }}/.ssh"

- name: Create the user's SSH directory
  ansible.builtin.file:
    path: "{{ ssh_dir }}"
    state: directory
    mode: 0700
    owner: "{{ user_name }}"
    group: "{{ cfg_user_reg['group'] }}"
  become: true
  notify: restore selinux contexts

- name: Configure the user's authorized public SSH keys
  ansible.builtin.template:
    src: authorized_keys.j2
    dest: "{{ ssh_dir }}/authorized_keys"
    mode: 0600
    owner: "{{ user_name }}"
    group: "{{ cfg_user_reg['group'] }}"
    backup: true
  become: true
  register: cfg_auth_ssh_keys_reg
  vars:
    title_var: "Authorized public SSH keys for the {{ user_name }} user"
    header_var: "{{ ( title_var + '\n \n' + default_comment_header )
                    | wordwrap(70)
                    | comment(  prefix=default_comment_prefix,
                                postfix=default_comment_postfix ) }}"
  notify: restore selinux contexts

# Do this here instead of with the ansible.builtin.user module to
# support multiple keys. TODO: Handle file name collisions.
- name: Generate any missing SSH keys
  ansible.builtin.command:
    argv: "{{ argv_var }}"
  become: true
  become_user: "{{ user_name }}"
  register: cfg_id_ssh_keys_reg
  vars:
    key_file_var: >-
      {{ ssh_dir }}/{{  key_item['file']
                        | default( 'id_' + key_item['type'] ) }}
    base_cmd_var:
      - ssh-keygen
      - -t
      - "{{ key_item['type'] }}"
      - -N
      - ''
      - -f
      - "{{ key_file_var }}"
    bits_var:
      - -b
      - 4096
    argv_var: "{{ ( key_item['type'] == 'rsa' )
                  | ternary(  base_cmd_var + bits_var,
                              base_cmd_var ) }}"
  loop: "{{ user_var['ssh']['id']
            | default([])
            | selectattr('pub', 'undefined') }}"
  loop_control:
    loop_var: key_item

- name: Record user configuration change
  ansible.builtin.set_fact:
    user_change: true
  when: cfg_id_ssh_keys_reg is changed or cfg_id_ssh_keys_reg is changed

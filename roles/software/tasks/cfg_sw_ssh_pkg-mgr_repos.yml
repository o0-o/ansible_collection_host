---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure repositories on an SSH host
#
# These tasks will configure repositories in separate configuration
# files as in the case of RHEL distributions.
#
########################################################################

- name: >-
    List configuration files currently in repositories configuration directory
  ansible.builtin.command:
    argv:
      - ls
      - -1
      - {{ repos_cfg_dir_var | quote }}
  become: true
  register: repo_cfg_files_reg
  changed_when: false

- name: There are extraneous repository configuration files
  vars:
    extra_files_var: >-
      {{  repo_cfg_files_reg['stdout_lines']
          | map('basename')
          | select('match', ".*{{ ext_var | default | regex_escape }}$")
          | difference( repos.keys()
                        | list
                        | product( [ ext_var | default ] )
                        | map('join') ) }}
  when: extra_files_var != []
  block:

    - name: Backup extraneous repository configuration files
      ansible.builtin.copy:
        content:
        dest: "{{ extra_file_item }}"
        mode: 0644
        owner: root
        group: "{{ root_grp }}"
        backup: true
      become: true
      loop: "{{ extra_files_var }}"
      loop_control:
        loop_var: extra_file_item

    - name: Delete extraneous repository configuration files
      ansible.builtin.file:
        path: "{{ extra_file_item }}"
        state: absent
      become: true
      loop: "{{ extra_files_var }}"
      loop_control:
        loop_var: extra_file_item

- name: Run tasks to template the each repository config file
  ansible.builtin.include_tasks: cfg_sw_ssh_pkg-mgr_template.yml
  vars:
    cfg_file_var: >-
      {{ repos_cfg_dir_var }}/{{ repo_item['repo'] }}{{ ext_var
                                                        | default }}
    title_var: >-
      {{ pkg_mgr_name_pretty_var }} {{ repo_item['repo'] }}
      Repository Configuration
    template_file_var: >-
      {{ pkg_mgr_name_item | regex_replace('^yum$', 'dnf') }}_repo_cfg.j2
  loop: "{{ repo_list }}"
  loop_control:
    loop_var: repo_item
